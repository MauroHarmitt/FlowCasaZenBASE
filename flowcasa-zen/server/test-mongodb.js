// üß™ SCRIPT DE PRUEBA PARA VERIFICAR CONEXI√ìN CON MONGODB
// Este script prueba la conexi√≥n y operaciones b√°sicas con MongoDB

const mongoose = require('mongoose');
require('dotenv').config({ path: './server/.env' });

// üîó CONEXI√ìN A MONGODB
const MONGODB_URI = process.env.MONGODB_URI || 'mongodb+srv://admin-web:stuart@cluster0.podle1o.mongodb.net/maurito-22';

console.log('üîç Probando conexi√≥n con MongoDB...');
console.log('üìç URI:', MONGODB_URI.replace(/\/\/.*@/, '//***:***@')); // Ocultar credenciales

mongoose.connect(MONGODB_URI, {
  useNewUrlParser: true,
  useUnifiedTopology: true,
})
.then(() => {
  console.log('‚úÖ ¬°Conexi√≥n exitosa con MongoDB!');
  
  // üìä Obtener informaci√≥n de la base de datos
  const db = mongoose.connection.db;
  
  // üìã Listar colecciones
  db.listCollections().toArray((err, collections) => {
    if (err) {
      console.error('‚ùå Error listando colecciones:', err);
    } else {
      console.log('üìö Colecciones disponibles:');
      collections.forEach(collection => {
        console.log(`  - ${collection.name}`);
      });
    }
    
    // üß™ Probar operaci√≥n de escritura
    const testCollection = db.collection('test_connection');
    testCollection.insertOne({
      test: true,
      timestamp: new Date(),
      message: 'Prueba de conexi√≥n exitosa'
    })
    .then(result => {
      console.log('‚úÖ Prueba de escritura exitosa:', result.insertedId);
      
      // üßπ Limpiar documento de prueba
      return testCollection.deleteOne({ _id: result.insertedId });
    })
    .then(() => {
      console.log('üßπ Documento de prueba eliminado');
      console.log('üéâ ¬°Todas las pruebas pasaron exitosamente!');
      process.exit(0);
    })
    .catch(err => {
      console.error('‚ùå Error en prueba de escritura:', err);
      process.exit(1);
    });
  });
})
.catch(err => {
  console.error('‚ùå Error conectando a MongoDB:', err);
  process.exit(1);
});

// ‚è∞ Timeout de seguridad
setTimeout(() => {
  console.log('‚è∞ Timeout alcanzado, cerrando conexi√≥n...');
  mongoose.connection.close();
  process.exit(1);
}, 10000);
